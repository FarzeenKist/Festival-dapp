[{"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\index.js":"1","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\App.js":"2","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\reportWebVitals.js":"3","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\AddProducts.js":"4","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\Navbar.js":"5","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\Products.js":"6"},{"size":480,"mtime":1645619425382,"results":"7","hashOfConfig":"8"},{"size":4638,"mtime":1665809883392,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1645619164806,"results":"10","hashOfConfig":"8"},{"size":2276,"mtime":1665748796814,"results":"11","hashOfConfig":"8"},{"size":854,"mtime":1665764032288,"results":"12","hashOfConfig":"8"},{"size":2683,"mtime":1665760835147,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xii4ip",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\index.js",[],"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\App.js",["28","29"],"import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport IERC from \"./contract/IERC.abi.json\";\r\nimport Marketplace from \"./contract/Marketplace.abi.json\";\r\nimport AddProducts from \"./components/AddProducts\";\r\nimport Products from \"./components/Products\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\n\r\nconst contractAddress = \"0x401a5aF466196591D206d19E1043b07561d365Ce\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nfunction App() {\r\n\tconst [contract, setcontract] = useState(null);\r\n\tconst [address, setAddress] = useState(null);\r\n\tconst [kit, setKit] = useState(null);\r\n\tconst [cUSDBalance, setcUSDBalance] = useState(0);\r\n\tconst [products, setProducts] = useState([]);\r\n\r\n\tconst connectToWallet = async () => {\r\n\t\tif (window.celo) {\r\n\t\t\ttry {\r\n\t\t\t\tawait window.celo.enable();\r\n\t\t\t\tconst web3 = new Web3(window.celo);\r\n\t\t\t\tlet kit = newKitFromWeb3(web3);\r\n\r\n\t\t\t\tconst accounts = await kit.web3.eth.getAccounts();\r\n\t\t\t\tconst user_address = accounts[0];\r\n\r\n\t\t\t\tkit.defaultAccount = user_address;\r\n\r\n\t\t\t\tawait setAddress(user_address);\r\n\t\t\t\tawait setKit(kit);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Error Occurred\");\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconnectToWallet();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (kit && address) {\r\n\t\t\tgetBalance();\r\n\t\t}\r\n\t}, [kit, address]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (contract) {\r\n\t\t\tgetProducts();\r\n\t\t}\r\n\t}, [contract]);\r\n\r\n\tconst getBalance = async () => {\r\n\t\ttry {\r\n\t\t\tconst balance = await kit.getTotalBalance(address);\r\n\t\t\tconst USDBalance = balance.cUSD\r\n\t\t\t\t.shiftedBy(-ERC20_DECIMALS)\r\n\t\t\t\t.toFixed(2);\r\n\t\t\tconst contract = new kit.web3.eth.Contract(\r\n\t\t\t\tMarketplace,\r\n\t\t\t\tcontractAddress\r\n\t\t\t);\r\n\t\t\tsetcontract(contract);\r\n\t\t\tsetcUSDBalance(USDBalance);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProducts = async () => {\r\n\t\tconst shoesLength = await contract.methods.getProductsLength().call();\r\n\t\tconst _showe = [];\r\n\t\tfor (let index = 0; index < shoesLength; index++) {\r\n\t\t\tlet _products = new Promise(async (resolve, reject) => {\r\n\t\t\t\tlet product = await contract.methods.readProduct(index).call();\r\n\r\n\t\t\t\tresolve({\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\towner: product[0],\r\n\t\t\t\t\timage: product[1],\r\n\t\t\t\t\tbrand: product[2],\r\n\t\t\t\t\t size: product[3],\r\n\t\t\t\t\tprice:product[4],\r\n\t\t\t\t\tsold:product[5]\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t_showe.push(_products);\r\n\t\t}\r\n\t\tconst _products = await Promise.all(_showe);\r\n\t\tsetProducts(_products);\r\n\t\t \r\n\t};\r\n\t\r\n\t \r\n\t\r\n\r\n\tconst AddProduct = async (_image, _brand, _size, price) => {\r\n\t\tconst _price = new BigNumber(price)\r\n\t\t\t.shiftedBy(ERC20_DECIMALS)\r\n\t\t\t.toString();\r\n\t\ttry {\r\n\t\t\tawait contract.methods\r\n\t\t\t\t.addProduct(_image, _brand, _size, _price,)\r\n\t\t\t\t.send({ from: address });\r\n\t\t\tgetProducts();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst UpdateShoeImage = async (_index, _newImage) => {\r\n\t\tconst newImage= new BigNumber(_newImage).shiftedBy(ERC20_DECIMALS).toString();\r\n\t\tconsole.log(_index);\r\n\r\n\t\t\r\n\t\ttry {\r\n\t\t  await contract.methods.update(_index, newImage).send({ from: address });\r\n\t\t  getProducts();\r\n\t\t  getBalance();\r\n\t\t} catch (error) {\r\n\t\t console.log(error);\r\n\t\t alert(\"The Shoe image has succesfully been updated\")\r\n\t\t}};\r\n\t \r\n\t\tconst UpdateShoeBrand = async (_index, _newBrand) => {\r\n\t\t\tconst newBrand = new BigNumber(_newBrand).shiftedBy(ERC20_DECIMALS).toString();\r\n\t\t\tconsole.log(_index);\r\n\t\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t  await contract.methods.update(_index, newBrand).send({ from: address });\r\n\t\t\t  getProducts();\r\n\t\t\t  getBalance();\r\n\t\t\t} catch (error) {\r\n\t\t\t console.log(error);\r\n\t\t\t alert(\"The Shoe brand has succesfully been updated\")\r\n\t\t\t}};\r\n \r\n\tconst buyProduct = async (_index) => {\r\n\t\ttry {\r\n\t\t\tconst cUSDContract = new kit.web3.eth.Contract(\r\n\t\t\t\tIERC,\r\n\t\t\t\tcUSDContractAddress\r\n\t\t\t);\r\n\r\n\t\t\tawait cUSDContract.methods\r\n\t\t\t\t.approve(contractAddress, products[_index].price)\r\n\t\t\t\t.send({ from: address });\r\n\t\t\tawait contract.methods.buyProduct(_index).send({ from: address });\r\n\t\t\tgetProducts();\r\n\t\t\tgetBalance();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<Navbar balance={cUSDBalance} />\r\n\r\n\t\t\t\t<Products\r\n\t\t\t\t\tproducts={products}\r\n\t\t\t\t\tbuyProduct={buyProduct}\r\n\t\t\t\t\tUpdateShoeImage={UpdateShoeImage}\r\n\t\t\t\t\tUpdateShoeBrand={UpdateShoeBrand}\r\n\t\t\t\t\tonlyOwner={address}\r\n\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t\t<AddProducts AddProduct={AddProduct} /> \r\n\t\t\t</div>\r\n\t\r\n\t\r\n);\r\n\t\r\n}\r\n\r\nexport default App;","C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\reportWebVitals.js",[],"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\AddProducts.js",[],"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\Navbar.js",[],"C:\\Users\\OGOYI\\EVERYTHINGSHOE\\src\\components\\Products.js",["30"],"import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Shoes = (props) => {\r\n  const [newImage, setnewImage] = useState('');\r\n  const [newBrand, setnewBrand] = useState('');\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();}\r\n\r\n  return (\r\n\t<body>\r\n\t<section class=\"container d-flex justify-content-center mt-50 mb-50\">\r\n\t  <div class=\"row\">\r\n\t {props.products.map((shoee) => (\r\n\t   \r\n\t\t<div class=\"col-md-4 mt-2\"  key={shoee.index}>\r\n\t\t<div class=\"card\">\r\n\t\t<div class=\"card-body\">\r\n                                        <div class=\"card-img-actions\">\r\n                                            \r\n                                                <img src= {shoee.image}class=\"card-img img-fluid\" width=\"96\" height=\"350\" alt=\"img\"/>\r\n                                              \r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div class=\"card-body bg-light text-center\">\r\n                                        <div class=\"mb-2\">\r\n                                            <h6 class=\"font-weight-semibold mb-2\">\r\n                                                <a href=\"/#\" class=\"text-default mb-2\" data-abc=\"true\">Brand {shoee.brand}</a>\r\n                                            </h6>\r\n\r\n                                            <a href=\"/#\" class=\"text-muted\" data-abc=\"true\">Shoe Size {shoee.size}</a>\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"mb-0 font-weight-semibold\">Price {shoee.price /  1000000000000000000}cUSD</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn bg-cart\" onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.buyProduct(shoee.index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}><i class=\"fa fa-cart-plus mr-2\"></i> Buy Now</button>\r\n\r\n{props.onlyOwner === shoee.owner && (\r\n               <div><input class=\"form-control form-control-lg\"  onChange={(e) => setnewImage(e.target.value)} type=\"text\" placeholder=\"Update Image\"></input>\r\n               <button class=\"btn btn-primary mb-2\"  onClick={() => props.UpdateShoeImage(shoee.index, newImage)}>Update image</button>\r\n               </div>\r\n\t\t\t   )}\r\n\r\n\t\t\t   {props.onlyOwner === shoee.owner && (\r\n               <div><input class=\"form-control form-control-lg\"  onChange={(e) => setnewBrand(e.target.value)} type=\"text\" placeholder=\"Update Brand\"></input>\r\n               <button class=\"btn btn-primary mb-2\"  onClick={() => props.UpdateShoeBrand(shoee.index, newBrand)}>Update Brand</button>\r\n               </div>\r\n\t\t\t   )}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t \r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t))}\r\n\t\t</div>\r\n \r\n\t\t</section>\r\n\t\t</body>\r\n\t\t  );\r\n\t\t}\r\n\t\texport default Shoes;\r\n\t\t ",{"ruleId":"31","severity":1,"message":"32","line":56,"column":5,"nodeType":"33","endLine":56,"endColumn":19,"suggestions":"34"},{"ruleId":"31","severity":1,"message":"35","line":62,"column":5,"nodeType":"33","endLine":62,"endColumn":15,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":7,"column":9,"nodeType":"39","messageId":"40","endLine":7,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.","ArrayExpression",["41"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["42"],"no-unused-vars","'submitHandler' is assigned a value but never used.","Identifier","unusedVar",{"desc":"43","fix":"44"},{"desc":"45","fix":"46"},"Update the dependencies array to be: [kit, address, getBalance]",{"range":"47","text":"48"},"Update the dependencies array to be: [contract, getProducts]",{"range":"49","text":"50"},[1546,1560],"[kit, address, getBalance]",[1633,1643],"[contract, getProducts]"]